[{"/home/daniel/Documents/Projects/snmp1/src/index.js":"1","/home/daniel/Documents/Projects/snmp1/src/App.js":"2","/home/daniel/Documents/Projects/snmp1/src/reportWebVitals.js":"3","/home/daniel/Documents/Projects/snmp1/src/frontend/test.js":"4","/home/daniel/Documents/Projects/snmp1/src/backend/getDevices.js":"5"},{"size":500,"mtime":1606906397796,"results":"6","hashOfConfig":"7"},{"size":127,"mtime":1606917198042,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1606906397796,"results":"9","hashOfConfig":"7"},{"size":410,"mtime":1606918368049,"results":"10","hashOfConfig":"7"},{"size":1903,"mtime":1606918431465,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1mei2wm",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},"/home/daniel/Documents/Projects/snmp1/src/index.js",[],["25","26"],"/home/daniel/Documents/Projects/snmp1/src/App.js",[],"/home/daniel/Documents/Projects/snmp1/src/reportWebVitals.js",[],"/home/daniel/Documents/Projects/snmp1/src/frontend/test.js",["27"],"import React, {Component} from 'react';\nimport get from '../backend/getDevices'\nimport trap from '../backend/getDevices'\n\nclass Test extends Component {\n    componentDidMount() {\n        let get = test()\n        console.log(get)\n    }\n    render() {\n        return(\n            <div>\n                <h1>ha</h1>\n            </div>\n        );\n    }\n}\n\nfunction test(){\n    return get;\n}\nexport  default Test;\n\n\n","/home/daniel/Documents/Projects/snmp1/src/backend/getDevices.js",["28","29","30","31","32"],"let snmp = require('snmp-native');\n// Create a Session with default settings.\nlet session = new snmp.Session();\n\n// Create a Session with explicit default host, port, and community.\n//let session = new snmp.Session({ host: 'localhost', port: 161, community: 'special' });\n\n// Create an IPv6 Session.\n//var session = new snmp.Session({ host: '2001:db8::42', family: 'udp6', community: 'private' });\n\nfunction get () {\n    session.get({oid: [1, 3, 6, 1, 4, 1, 42, 1, 0]}, function (error, varbinds) {\n        if (error) {\n            console.log('Fail :(');\n        } else {\n            console.log(varbinds[0].oid + ' = ' + varbinds[0].value + ' (' + varbinds[0].type + ')');\n        }\n    });\n}\n\nfunction getNext () {\n    session.getNext({oid: [1, 3, 6, 1, 4, 1, 42, 1, 0]}, function (error, varbinds) {\n        if (error) {\n            console.log('Fail :(');\n        } else {\n            console.log(varbinds[0].oid + ' = ' + varbinds[0].value + ' (' + varbinds[0].type + ')');\n        }\n    });\n}\n\nfunction getAll () {\n    let oids = [[1, 3, 6, 1, 4, 1, 42, 1, 0], [1, 3, 6, 1, 4, 1, 42, 2, 0]];\n    session.getAll({oids: oids}, function (error, varbinds) {\n        varbinds.forEach(function (vb) {\n            console.log(vb.oid + ' = ' + vb.value + ' (' + vb.type + ')');\n        });\n    });\n}\n\nfunction getSubtree () {\n    session.getSubtree({ oid: [1, 3, 6, 1, 4, 1, 42] }, function (error, varbinds) {\n        if (error) {\n            console.log('Fail :(');\n        } else {\n            varbinds.forEach(function (vb) {\n                console.log(vb.oid + ' = ' + vb.value + ' (' + vb.type + ')');\n            });\n        }\n    });\n}\n\nfunction set () {\n    session.set({oid: [1, 3, 6, 1, 4, 1, 42, 1, 0], value: 42, type: 2}, function (error, varbind) {\n        if (error) {\n            console.log('Fail :(');\n        } else {\n            console.log('The set is done.');\n        }\n    });\n}\n",{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":3,"column":8,"nodeType":"39","messageId":"40","endLine":3,"endColumn":12},{"ruleId":"37","severity":1,"message":"41","line":11,"column":10,"nodeType":"39","messageId":"40","endLine":11,"endColumn":13},{"ruleId":"37","severity":1,"message":"42","line":21,"column":10,"nodeType":"39","messageId":"40","endLine":21,"endColumn":17},{"ruleId":"37","severity":1,"message":"43","line":31,"column":10,"nodeType":"39","messageId":"40","endLine":31,"endColumn":16},{"ruleId":"37","severity":1,"message":"44","line":40,"column":10,"nodeType":"39","messageId":"40","endLine":40,"endColumn":20},{"ruleId":"37","severity":1,"message":"45","line":52,"column":10,"nodeType":"39","messageId":"40","endLine":52,"endColumn":13},"no-native-reassign",["46"],"no-negated-in-lhs",["47"],"no-unused-vars","'trap' is defined but never used.","Identifier","unusedVar","'get' is defined but never used.","'getNext' is defined but never used.","'getAll' is defined but never used.","'getSubtree' is defined but never used.","'set' is defined but never used.","no-global-assign","no-unsafe-negation"]