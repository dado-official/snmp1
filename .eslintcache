[{"/home/daniel/Documents/Projects/snmp1/src/index.js":"1","/home/daniel/Documents/Projects/snmp1/src/App.js":"2","/home/daniel/Documents/Projects/snmp1/src/reportWebVitals.js":"3","/home/daniel/Documents/Projects/snmp1/src/frontend/test.js":"4","/home/daniel/Documents/Projects/snmp1/src/frontend/Devicelist.js":"5","/home/daniel/Documents/Projects/snmp1/src/frontend/Device.js":"6","/home/daniel/Documents/Projects/snmp1/src/frontend/SNMPField.js":"7"},{"size":500,"mtime":1606906397796,"results":"8","hashOfConfig":"9"},{"size":127,"mtime":1606917198042,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1606906397796,"results":"11","hashOfConfig":"9"},{"size":1755,"mtime":1610451995203,"results":"12","hashOfConfig":"9"},{"size":1692,"mtime":1610435071625,"results":"13","hashOfConfig":"9"},{"size":1617,"mtime":1610452774599,"results":"14","hashOfConfig":"9"},{"size":858,"mtime":1610450512439,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1mei2wm",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"18"},"/home/daniel/Documents/Projects/snmp1/src/index.js",[],["34","35"],"/home/daniel/Documents/Projects/snmp1/src/App.js",[],"/home/daniel/Documents/Projects/snmp1/src/reportWebVitals.js",[],"/home/daniel/Documents/Projects/snmp1/src/frontend/test.js",["36"],"import React, {Component} from 'react';\nimport axios from 'axios'\nimport Device from \"./Device\";\nimport SNMPField from \"./SNMPField\";\nimport \"./mainStyle.css\"\nimport Devicelist from \"./Devicelist\";\n\nclass Test extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            state_devices: JSON,\n            name: '',\n            ip: '',\n            mac: '',\n            snmp: JSON\n        };\n    }\n\n    componentDidMount() {\n\n    }\n\n    setDevicePar(name, ip, mac){\n        this.setState({name: name});\n        this.setState({ip: ip});\n        this.setState({mac: mac});\n    }\n\n    setSNMP(snmp){\n        this.setState({snmp: snmp});\n    }\n\n    render() {\n        return(\n            <div id=\"wrapper\">\n                <div id=\"nav\">\n                    <p>SNMP TOOL</p>\n                </div>\n                <div id=\"contaiermain\">\n                    <div id=\"Devicelist\" className=\"container\">\n                        <Devicelist  parent={this}/>\n                    </div>\n                    <div id=\"right\">\n                        <div id=\"Device\" className=\"container\">\n                            <Device\n                                parent={this}\n                                name={this.state.name}\n                                ip={this.state.ip}\n                                mac={this.state.mac}\n                            />\n                        </div>\n                        <div id=\"SNMPField\" className=\"container\">\n                            <SNMPField\n                                snmp={this.state.snmp}\n                            />\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n        );\n    }\n}\nexport  default Test;\n\n","/home/daniel/Documents/Projects/snmp1/src/frontend/Devicelist.js",["37"],"import React from 'react';\nimport axios from \"axios\";\nimport Device from \"./Device\";\nimport \"./mainStyle.css\"\n\nconst API_PATH_get_IPs = 'http://10.10.30.239:3000/areAlive'\n\nclass Devicelist extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            devices: [],\n            list: <li/>\n        };\n    }\n\n\n    areAlive(){\n        let self = this;\n        const HEADERS = {\n            mode: 'cors',\n            credentials: 'include',\n        }\n\n        let config = {\n            method: 'get',\n            url: API_PATH_get_IPs,\n            headers: HEADERS,\n            data : \"data\"\n        };\n\n\n        axios(config)\n            .then(function (response) {\n                console.log(response.data)\n                self.setState({devices: response.data})\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n\n    componentDidMount() {\n        console.log(\"compnent did mount\")\n        this.areAlive()\n    }\n\n    render() {\n        let self = this;\n        return(<div>\n            <p>Device List</p>\n            <ul id=\"devicelist\">\n                {this.state.devices.map(function(d){\n                    if(d.name === '?'){\n                        return (<li onClick={() => self.props.parent.setDevicePar(d.name, d.ip, d.mac)} key={d.ip} className=\"listElement\">{d.ip}</li>)\n                    } else {\n                        return (<li onClick={() => self.props.parent.setDevicePar(d.name, d.ip, d.mac)} key={d.ip} className=\"listElement\">{d.name} (d.ip))</li>)\n                    }\n                })}\n            </ul>\n        </div>);\n    }\n}\nexport default Devicelist;\n","/home/daniel/Documents/Projects/snmp1/src/frontend/Device.js",[],"/home/daniel/Documents/Projects/snmp1/src/frontend/SNMPField.js",["38","39"],"import React from 'react';\n\nclass SNMPField extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            snmp: this.props.snmp\n        };\n    }\n\n    makelist(){\n        let allOIDVALUES = [];\n        if(this.props.snmp.SNMPWalk === undefined){\n            return <p> No SNMP here</p>\n        } else {\n            this.props.snmp.SNMPWalk.map(\n                function(d){\n                    console.log(d.oid + d.value)\n                    allOIDVALUES.push(<li>\n                        OID: {d.oid}: VALUE: {d.value}\n                    </li>);\n                })\n        }\n        console.log(allOIDVALUES)\n        return allOIDVALUES\n    }\n\n    render() {\n        let self = this\n        return(\n            <ul>\n                {this.makelist()}\n            </ul>\n        );\n    }\n}\nexport default SNMPField",{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":2,"column":8,"nodeType":"46","messageId":"47","endLine":2,"endColumn":13},{"ruleId":"44","severity":1,"message":"48","line":3,"column":8,"nodeType":"46","messageId":"47","endLine":3,"endColumn":14},{"ruleId":"49","severity":1,"message":"50","line":17,"column":17,"nodeType":"51","messageId":"52","endLine":17,"endColumn":25},{"ruleId":"44","severity":1,"message":"53","line":29,"column":13,"nodeType":"46","messageId":"47","endLine":29,"endColumn":17},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'Device' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from function.","FunctionExpression","expectedInside","'self' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]